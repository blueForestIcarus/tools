#!/bin/bash

USER=
IP=
HOSTNAME=
ROOT=
PASS=
COMMAND=
SELECT=
HOST=


if [ $# -eq 0 ]; then
	act="--ssh"
fi

while test $# -gt 0; do
    case "$1" in
        --command | -c )
            act="$1"
            shift;

			COMMAND="$1";
			shift;
			;;
		-p | --pass | --password )
			PASS="$1"
			shift	
            ;;
		-A | --addr | --address )
			IP="echo $1 | cut -d '@' -f2"
			USER="echo $1 | cut -d '@' -f1"
			shift; shift; shift
			;;	
		-T | --target )
			IP="$2"
			USER="$3"	
			shift; shift; shift
			;;
		-H | --host )
			HOSTNAME="$2"
			shift; shift
			;;	
		-0 | --root ) 
			ROOT=".root"
			shift; 
			;;	
		--ssh | --fs | --rfs | --ffs | --mount | --rmount | --unmount | --umount | --runmount | --rumount | --xfs | --xmount | -U | -X )
            act="$1"
            shift
            ;;
		--select | -s )
			SELECT=true 
			shift
			;;
    	* )
			echo "UNSUPPORTED ARG: $1"
			exit 1
			;;
	esac 
done
	
setter () {
	DATA="$1"
	if [ -z "$IP" ]; then
		IP=`echo "$DATA" | cut -d ' ' -f1`
		USER=`echo "$DATA" | cut -d ' ' -f2`
	fi

	if [ -z "$PASS" ]; then
		PASS=`echo "$DATA" | cut -d ' ' -f3`
	fi
}

if [ ! -z "$HOSTNAME" ]; then
	DATA=`iplist --host "$HOSTNAME"`
	setter "$DATA"
fi

if [ ! -z "$SELECT" ]; then 
	if [ -z "$IP" ]; then
		iplist --pretty --select || exit 1
	else
		iplist --set "$IP" "$USER" || exit 1
	fi
	IP=
	USER=
fi

DATA=`iplist --active` 
setter $DATA

gethost () {
	if [ -z "$HOSTNAME" ]; then
		avail --hostname "$IP" "$USER" || exit 1
	else 
		echo "$HOSTNAME"
	fi
}
	
getlazyhost () {
	SHOST="$HOSTNAME"
	if [ -z "$SHOST" ]; then
		SHOST=`iplist --gethost "$IP" "$USER"`
	fi
	echo "$SHOST"
}

echo "[ $USER @ $IP ]"
H=`getlazyhost`
test -z "$H" && echo "HOSTNAME: $H"

withpass () {
		if [ -z "$PASS" ] || ! which sshpass >/dev/null 2>&1; then
			$COMMAND $1
		else
			sshpass -p "$PASS" $1
		fi
}


rfs () {
	L_USER="`id -un`"
	L_IP='`cut -d \  -f1 <<< $$SSH_CLIENT`'
	if [ -z "$ROOT" ]; then
		L_HOME=/home/$L_USER
	else
		L_HOME=/
	fi
	MNT=/home/$USER/mnt/`hostname`$ROOT
	CMD = "set -x; mkdir -p $MNT; sshfs $L_USER@L_IP:$L_HOME $MNT -o allow_other ln -sf -T $MNT dev || rmdir $MNT" 
	
	withpass "ssh -t -o StrictHostKeyChecking=no "$USER@$IP" \"$CMD\""	
}

ffs () {
	HOSTNAME=`gethost`
	MNT=~/mnt/"$HOSTNAME"$ROOT
	if [ -z "$ROOT" ]; then
		RF=/home/$USER
	else
		RF=/
	fi
	mkdir -p $MNT
	withpass "sshfs $USER@$IP:$RF $MNT -o allow_other || rmdir $MNT "
}

unmount () {
	SHOST=`getlazyhost`
	MNT=~/mnt/$SHOST$ROOT
	if [ -d "$MNT" ]; then
		fusermount -u "$MNT"
		rmdir "$MNT"	
	fi
}

runmount () {
	MNT=~/mnt/`hostname`$ROOT
	LN=~/dev/
	echo $MNT $LN
	CMD="set -x; fusermount -u $MNT && ( rmdir $MNT ;  test ! -e $LN && rm -f $LN ) "
	# withpass "ssh -t -o StrictHostKeyChecking=no "$USER@$IP" \"$CMD\""	
}

case "$act" in
	--command | -c )
		withpass "$COMMAND"
		;;
	--ssh )
		withpass "ssh -t -Y $USER@$IP"
		;;
	--fs )
		rfs
		ffs
		;;
	--rfs | --rmount )
		rfs
		;;
	--ffs | --mount )
		ffs
		;;
	--unmount | --umount )
		unmount
		;;
	--runmount | --rumount )
		runmount
		;;
	--xmount | xfs )
		unmount
		runmount 
		;;
	-U )
		for i in ~/mnt/*; do 
			fusermount -zu "$i"
		done
		rmdir ~/mnt/*
		;;
	-X )
		cmd="set -x; for i in ~/mnt/*; do fusermount -zu $i; done; rmdir ~/mnt/*; test! -e ~/dev && rm -f ~/dev"
		withpass ssh -o StrictHostKeyChecking=no "$USER@$IP" \"$CMD\"
		;;
esac
