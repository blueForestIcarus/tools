#!/bin/bash
TIMEOUT=4

if [ "$1" == "--fix" ]; then
    shift
    sshtest $@
    exit $?
fi

QUICK=
if [ "$1" == "--quick" ]; then
    shift
    QUICK=True
fi

poke () {
	tmp=`mktemp`
	ssh-keyscan -H $1 2>/dev/null > $tmp || return 1
	ssh-keygen -R $1  2>/dev/null 1>&2
	cat $tmp >> ~/.ssh/known_hosts 
	rm $tmp 
}

if [ "$1" == "--poke" ]; then
	ping -c 1 $2 >/dev/null 2>&1 || exit 1
	if poke $2; then 
		echo "UP $2"
		exit 0
	else
		echo "no ssh server at $2"
		exit 1
	fi
fi

run () {
	if [ -z "$QUICK" ];then
		poke $@ || return 1
	fi

	if which sshpass >/dev/null 2>&1 && test ! -z "$3"; then
		SSHPASS="sshpass -p $3"
	fi 

	if [ -z "$NOCOPYID" ] && [ -z "$QUICK" ]; then
		if [ ! -z "$SSHPASS" ]; then
			timeout $TIMEOUT $SSHPASS ssh-copy-id $2@$1 >/dev/null 2>&1
			if [ $? -ne 0 ]; then 
				return 2
			fi 
		elif [ -z "$NOPROMPT" ]; then
			ssh-copy-id $2@$1 2>&1 | grep "password:" 1>&2
			if [ ${PIPESTATUS[0]} -ne 0 ]; then 
				return 2
			fi 
		fi 
	fi

	tmp=`mktemp`
	timeout $TIMEOUT $SSHPASS ssh -o StrictHostKeyChecking=no $2@$1 "hostname" > $tmp || return 3
	HOSTNAME=`cat $tmp`
	rm $tmp
}
run $@
RET=$?

if [ $RET -eq 1 ]; then
    echo -e "\tDOWN $2@$1" 1>&2
    exit 1
elif [ $RET -eq 2 ] || [ $RET -eq 3 ] ; then
    echo -e "\tAUTH $2@$1" 1>&2
    echo "*$1 $2"
    exit 2
else
    echo -e "\tUP   $2@$1 $HOSTNAME" 1>&2
    echo "$1 $2 $HOSTNAME"
    exit 0
fi
