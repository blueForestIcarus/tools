#!/bin/bash
#protects thoughts with rsa keypair
#TODO overhaul with ellypticurve encryption
FILE="`i root`/data/diary/id_rsa"

oneday () {
    CMD="openssl smime -decrypt -binary -inform DER -passin pass:$PASS"
    while read -r line; do
        echo "$line" | base64 -d > $tmp
        cp $tmp testb
        $CMD -in "$tmp" -inkey $FILE.pem
    done < "$1"
}

case "$1" in 
    -r | --read )
        tmp=`mktemp`
        read -s -p "private key password: " PASS
        echo -e '\n' >&2

        if [ -z "$2" ]; then
            : 
        else
            oneday "`i diary`"/$2  
        fi 
        rm $tmp
        exit 0
        ;;
    -* )
        echo "Bad arg: $1"
        exit 1
        ;;
esac

if [ ! -z "$2" ]; then
    echo "Too many args! Abort."
    exit 2
fi

mkdir -p "`dirname $FILE`"
if ! [ -f $FILE.pem ]; then
    openssl 
    genrsa -out $FILE.pem.unlocked 4096
    openssl rsa -in $FILE.pem.unlocked -pubout -out $FILE.pem.pub
    openssl rsa -aes256 -in $FILE.pem.unlocked -out $FILE.pem
    shred -u $FILE.pem.unlocked
fi

if [ -z "`i diary`" ]; then
    read -p "Enter diary destination: " dest
    dest="${dest//\~/$HOME}"
    mkdir -p "$dest"
    sudo i diary "$dest"
fi

tmp="`mktemp`"

HEAD="-- `date +'%T'` $USER@$HOSTNAME"
echo "$HEAD" > $tmp
if [ -z "$1" ];then
    vim $tmp
    if ! [ `cat $tmp | wc -l` -gt 1 ];then
        echo "Message empty. Aborting"
        rm $tmp
        exit 1 
    fi
else
    echo "$1" >> "$tmp" 
fi

tmp2="`mktemp`"
awk 'NF {p=1} p' <<<"$(< $tmp)" > $tmp2
printf '\n' >> $tmp2


DIR="`i diary`"
mkdir -p "$DIR"

DATE="`date +'%F'`"
DF="$DIR"/"$DATE"

CMD="openssl smime -encrypt -binary -aes-256-cbc -outform DER -inkey $FILE.pem.pub "

out="`mktemp`"
if ! [ -f "$DF" ]; then
    txt="`mktemp`"
    echo "[`date +'%a %m %b %Y'`]" > $txt
    $CMD -in "$txt" -out "$out" $FILE.pem.cert
    base64 -w 0 < "$out" > "$DF"
    printf '\n' >> "$DF"
    rm -f "$txt" "$out"
fi
$CMD -in "$tmp2" -out "$out" $FILE.pem.cert
cp $out testa
base64 -w 0 < "$out" >> "$DF"
printf '\n' >> "$DF"
rm -f "$tmp" "$out" "$txt"
